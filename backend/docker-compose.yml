
version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./static:/app/static
    env_file:
      - .env
    restart: always
    depends_on:
      - mongodb
    networks:
      - ey-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      replicas: 2

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ey-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-password}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Redis for rate limiting and caching
  redis:
    image: redis:alpine
    networks:
      - ey-network
    volumes:
      - redis_data:/data
    restart: always

  # SQL Server is commented out since it might be managed separately
  # or could be a cloud-hosted instance
  # mssql:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - SA_PASSWORD=${MSSQL_PASSWORD:-StrongPassword123!}
  #   ports:
  #     - "1433:1433"
  #   volumes:
  #     - mssql_data:/var/opt/mssql
  #   networks:
  #     - ey-network

networks:
  ey-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  # mssql_data:
